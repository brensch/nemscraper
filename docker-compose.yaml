services:
  grafana:
    image: grafana/grafana:12.0.1-ubuntu
    restart: always
    ports:
      - "3000:3000"
    user: "1000:1000"
    volumes:
      - ./assets:/data
      - ./grafana/plugins/motherduck-duckdb-datasource:/var/lib/grafana/plugins/motherduck-duckdb-datasource
      - ./grafana/dashboards:/etc/grafana/provisioned_dashboards
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: "motherduck-duckdb-datasource"

  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"

  node-exporter:
    image: prom/node-exporter:latest
    restart: always
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - ./node_exporter_textfile:/var/lib/node_exporter/textfile_collector:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/rootfs"
      - "--collector.textfile.directory=/var/lib/node_exporter/textfile_collector"

  assets-exporter:
    build:
      context: .
      dockerfile: Dockerfile.assetsexporter
    restart: always
    volumes:
      - ./assets:/assets
      - ./node_exporter_textfile:/textfile

  gcloud-sync:
    image: google/cloud-sdk:alpine
    restart: always
    user: "1000:1000"
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/gcs.json
    volumes:
      - ./secrets/uploader-sa.json:/secrets/gcs.json:ro
      - ./assets:/assets:ro
      - ./scripts/gcloud-sync.sh:/usr/local/bin/gcloud-sync.sh:ro
    command: ["bash", "/usr/local/bin/gcloud-sync.sh"]

  file-compactor:
    build:
      context: .
      dockerfile: Dockerfile.compactor
    working_dir: /usr/src/app
    user: "1000:1000"
    volumes:
      - ./assets:/usr/src/app/assets
    command:
      - "./assets/parquet"
      - "./assets/compacted"
      - "./assets/history"

  nemscraper:
    build:
      context: .
      dockerfile: Dockerfile.nemscraper
    working_dir: /usr/src/app
    user: "1000:1000"
    volumes:
      - ./assets:/usr/src/app/assets
    command: ["./target/release/nemscraper"]